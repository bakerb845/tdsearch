CMAKE_MINIMUM_REQUIRED(VERSION 2.6 FATAL_ERROR)
PROJECT(tdSearch)
ENABLE_LANGUAGE(C)

#SET(CMAKE_BUILD_TYPE Release)
SET(TDSEARCH_VERSION_MAJOR 1)
SET(TDSEARCH_VERSION_MINOR 1)
SET(TDSEARCH_VERSION_PATCH 1)
SET(TDSEARCH_VERSION ${TDSEARCH_VERSION_MAJOR}.${TDSEARCH_VERSION_MINOR}.${TDSEARCH_VERSION_PATCH})

# Add modules for finding requisites
SET(CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/CMakeModules)
# For testing
SET(CMAKE_TESTING_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/testing)
# For binaries
SET(CMAKE_BINARY_DIR  ${CMAKE_CURRENT_SOURCE_DIR}/bin)
# For libraries
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/lib)
SET(LIBRARY_OUTPUT_PATH ${CMAKE_CURRENT_SOURCE_DIR}/lib)

ADD_SUBDIRECTORY(include)

INCLUDE_DIRECTORIES(
${CMAKE_CURRENT_SOURCE_DIR}/include
${COMPEARTH_INCLUDE_DIR}
${INIPARSER_INCLUDE_DIR}
${PARMT_INCLUDE_DIR}
${ISCL_INCLUDE_DIR}
${H5_C_INCLUDE_DIR}
${SACIO_INCLUDE_DIR}
${ISPL_INCLUDE_DIR}
${CPS_INCLUDE_DIR}
${MPI_C_INCLUDE_PATH}
${TTIMES_INCLUDE_DIR}
)

#ADD_SUBDIRECTORY(include)
#ADD_SUBDIRECTORY(src)
SET(SRCS src/commands.c src/data.c src/event.c src/greens.c src/gridsearch.c src/hudson.c)

ADD_LIBRARY(tdSearch_shared SHARED ${SRCS})
ADD_EXECUTABLE(tdsearch src/tdsearch.c)

IF (TDSEARCH_USE_INTEL)
   MESSAGE("Using MKL and IPP")
   SET(LINK_LIB_ALL ${PARMT_LIBRARY} ${COMPEARTH_LIBRARY}
                    ${CPS_LIBRARY} ${SACIO_LIBRARY} ${ISPL_LIBRARY} ${ISCL_LIBRARY}
                    -Wl,--start-group ${MKL_LIBRARY} -Wl,--end-group ${IPP_LIBRARY}
                    ${TTIMES_LIBRARY} ${H5_LIBRARY} ${CJSON_LIBRARY}
                    ${INIPARSER_LIBRARY} ${MPI_C_LIBRARIES}
                    -lm -ldl -lpthread -lpng -lstdc++)
ELSE ()
   SET(LINK_LIB_ALL ${PARMT_LIBRARY} ${COMPEARTH_LIBRARY}
                    ${CPS_LIBRARY} ${SACIO_LIBRARY} ${ISPL_LIBRARY} ${ISCL_LIBRARY}
                    -Wl,--start-group ${MKL_LIBRARY} -Wl,--end-group ${IPP_LIBRARY}
                    ${TTIMES_LIBRARY} ${H5_LIBRARY} ${CJSON_LIBRARY}
                    ${INIPARSER_LIBRARY} ${MPI_C_LIBRARIES}
                    -lm -ldl -lpthread -lpng -lstdc++)
ENDIF(TDSEARCH_USE_INTEL)
#TARGET_LINK_LIBRARIES(tdSearch tdSearch_shared) 
TARGET_LINK_LIBRARIES(tdSearch_shared ${LINK_LIB_ALL})
SET_TARGET_PROPERTIES(tdsearch PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}) 
TARGET_LINK_LIBRARIES(tdsearch tdSearch_shared ${LINK_LIB_ALL})

INSTALL(TARGETS ${TARGET_NAMES}
        RUNTIME DESTINATION ${CMAKE_INBARY_DIR}
        LIBRARY DESTINATION ${LIBRARY_OUTPUT_PATH}
        ARCHIVE DESTINATION ${LIBRARY_OUTPUT_PATH})

#------------------------------------------------------------------------------#
#                                   CPACK Packaging                            #
#------------------------------------------------------------------------------#
SET(CPACK_PACKAGE_NAME "tdsearch")
SET(CPACK_PACKAGE_VENDOR "ISTI")
SET(CPACK_PACKAGE_CONTACT "benbaker@isti.com")
#SET(CPACK_PACKAGE_LICENSE "Apache 2")
SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY "A t* and depth estimation toolkit")
SET(CPACK_PACKAGE_VERSION_MAJOR ${TDSEARCH_VERSION_MAJOR})
SET(CPACK_PACKAGE_VERSION_MINOR ${TDSEARCH_VERSION_MINOR})
SET(CPACK_PACKAGE_VERSION_PATCH ${TDSEARCH_VERSION_PATCH})
#SET(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_CURRENT_SOURCE_DIR}/LICENSE")
#IF (WIN32 AND NOT UNIX)

#ELSE(WIN32 AND NOT UNIX)
  SET(CPACK_GENERATOR "TGZ")
  SET(CPACK_SOURCE_GENERATOR TGZ)
  SET(CPACK_SOURCE_PACKAGE_FILE_NAME "tdsearch-${TDSEARCH_VERSION}" )
  #SET(CPACK_SOURCE_IGNORE_FILES ~$ .svn ${CPACK_SOURCE_IGNORE_FILES} )
#ENDIF(WIN32 AND NOT UNIX)
INCLUDE(CPack)

#------------------------------------------------------------------------------#
#                              Configuration Details                           #
#------------------------------------------------------------------------------#
SET(TDSEARCH_LIBRARY tdsearch)
SET(INCLUDE_INSTALL_DIR include/)
SET(LIB_INSTALL_DIR lib/)
SET(SYSCONFIG_INSTALL_DIR etc/tdsearch/)
#SET(LIB_INSTALL_DIR ${LIBRARY_OUTPUT_PATH})
INCLUDE(CMakePackageConfigHelpers)
CONFIGURE_PACKAGE_CONFIG_FILE(${CMAKE_MODULE_PATH}/FindTDSearch.cmake.in
                              ${CMAKE_BINARY_DIR}/FindTDSearch.cmake
                              INSTALL_DESTINATION ${LIB_INSTALL_DIR}/tdsearch/cmake
                              PATH_VARS INCLUDE_INSTALL_DIR SYSCONFIG_INSTALL_DIR)
WRITE_BASIC_PACKAGE_VERSION_FILE(${LIBRARY_OUTPUT_PATH}/TDsearchConfigVersion.cmake
                                 VERSION ${TDSEARCH_VERSION}
                                 COMPATIBILITY SameMajorVersion)
SET(TARGET_NAMES tdSearch_shared tdsearch)
INSTALL(TARGETS ${TARGET_NAMES}
        PERMISSIONS OWNER_EXECUTE OWNER_WRITE OWNER_READ GROUP_EXECUTE GROUP_WRITE GROUP_READ WORLD_EXECUTE WORLD_WRITE WORLD_READ
        LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib
        ARCHIVE DESTINATION ${CMAKE_INSTALL_PREFIX}/lib
        RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIX}/bin)
INSTALL(FILES
        ${CMAKE_BINARY_DIR}/FindTDSearch.cmake
        ${LIBRARY_OUTPUT_PATH}/TDSearchConfigVersion.cmake
        DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/tdsearch/cmake)
